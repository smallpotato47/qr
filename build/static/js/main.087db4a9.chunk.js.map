{"version":3,"sources":["components/Button.tsx","components/Place.tsx","containers/Welcome/index.tsx","assets/cross.svg","assets/tick.svg","assets/crossBlack.svg","assets/greenTick.svg","containers/Confirm/AutoLeaveModal.tsx","containers/Confirm/LeaveModal.tsx","components/DatePicker.tsx","containers/Confirm/TimePickModal.tsx","assets/checkbox.svg","assets/checkboxChecked.svg","components/CheckBox.tsx","containers/Confirm/index.tsx","assets/back.svg","utils/qrDecode.ts","assets/qrOverlay.svg","components/QRCodeReader.tsx","containers/QR/index.tsx","assets/plus.svg","components/PWAPrompt.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["ConfirmButton","styled","button","props","disabled","shadowed","ModalConfirmButton","Place","value","onChange","placeholder","readOnly","StyledInput","e","target","async","TextareaAutosize","Welcome","useState","place","setPlace","PageWrapper","ContentWrapper","Msg","ActionWrapper","isEmpty","to","pathname","search","StyledLink","div","Link","AutoLeaveModal","isModalOpen","onCancel","onConfirm","selectedAutoLeaveHour","date","autoLeaveHourTmp","setAutoLeaveHourTmp","useEffect","toDate","useMemo","add","isOpen","onRequestClose","style","overlay","backgroundColor","content","outline","border","padding","borderRadius","width","position","top","left","transform","height","overflow","ariaHideApp","onAfterOpen","root","document","querySelector","disableBodyScroll","CrossWrapper","Cross","src","crossBlack","onClick","Title","HourListWrapper","id","HourList","map","hour","HourListItem","SelectedTick","greenTick","TimeWrapper","format","img","h1","ul","li","LeaveModal","onLeaveNow","onLeaved","autoLeaveHour","shouldDisplayAutoLeave","Time","AutoLeave","GreenButton","DatePicker","forwardRef","ref","useImperativeHandle","init","ele","Picker","inline","rows","Wrapper","className","TimePickModal","datePickerRef","useRef","current","TimePickerWrapper","CheckBox","checked","handleClick","isAndroid","StyledCheckbox","color","IOSCheckBox","checkboxChecked","checkbox","Checkbox","Confirm","browserHistory","useHistory","browserLocation","useLocation","autoLeave","setAutoLeave","setAutoLeaveHour","isAutoLeaveModalOpen","setIsAutoLeaveModalOpen","isLeaveModalOpen","setIsLeaveModalOpen","isTimePickModalOpen","setIsTimePickModalOpen","URLSearchParams","get","push","dayjs","handleLeavePage","Header","cross","MessageWrapper","PlaceWrapper","TickWrapper","TickWrapperInner","Tick","tick","ActionGroup","CheckBoxWrapper","Change","LeaveMessage","getHash","placeId","string","sha256","getUserMedia","constraints","navigator","mediaDevices","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Promise","resolve","reject","call","Error","QRCodeReader","onDecode","videoRef","canvasRef","useCallback","canvasElement","videoElement","readyState","HAVE_ENOUGH_DATA","canvas","getContext","videoHeight","videoWidth","drawImage","imageData","getImageData","code","jsQR","data","inversionAttempts","requestAnimationFrame","video","facingMode","then","stream","srcObject","play","Video","playsInline","Canvas","QR","BackButton","back","Message","VideoContainer","Overlay","input","startsWith","substring","computedHash","base64Data","json","JSON","parse","window","atob","console","log","decodedData","hashMatch","hash","trimmedZhName","nameZh","trim","name","nameEn","decodeURIComponent","escape","qrDecode","qrOverlay","PWAPrompt","AddIcon","plus","InstructionWrapper","App","isPWA","setPWA","matchMedia","matches","test","location","hostname","adapter","browserDetails","browser","version","GlobalStyle","basename","exact","path","createGlobalStyle","isLocalhost","Boolean","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.087db4a9.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const ConfirmButton = styled.button<{ shadowed?: boolean }>`\n  display: block;\n  margin: auto;\n  margin-bottom: 16px;\n  font-size: 24px;\n  padding: 10px 0;\n  width: 80%;\n  border-radius: 48px;\n  flex-shrink: 0;\n  max-width: 280px;\n  font-weight: 500;\n\n  ${(props) =>\n    props.disabled\n      ? `background-color: #D3D3D3;\n        color: #A1A1A1;\n        `\n      : `\n        background-color: #fed426;\n      `}\n\n  border: 0;\n  outline: none;\n  ${(props) =>\n    props.shadowed ? \"box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.5);\" : \"\"}\n\n  &:focus {\n    outline: none;\n    text-decoration: none;\n  }\n`;\n\nexport const ModalConfirmButton = styled(ConfirmButton)`\n  font-size: 16px;\n  padding: 12px 0;\n  width: 90%;\n  font-weight: unset;\n`;\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport TextareaAutosize from \"react-autosize-textarea\";\n\ntype Props = {\n  value: string;\n  onChange?: (value: string) => void;\n  placeholder?: string;\n  readOnly?: boolean;\n};\n\nexport const Place = ({ value, onChange, placeholder, readOnly }: Props) => {\n  return (\n    <StyledInput\n      value={value}\n      placeholder={placeholder}\n      readOnly={readOnly}\n      onChange={(e: any) => {\n        onChange && onChange(e.target.value);\n      }}\n      async\n    />\n  );\n};\n\nexport const StyledInput = styled(TextareaAutosize)`\n  text-align: center;\n  font-size: 32px;\n  background-color: transparent;\n  border: 0;\n  outline: none;\n  margin: 4px 0;\n  color: #fed426;\n  text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.8);\n  width: 100%;\n\n  padding-left: 0;\n  padding-right: 0;\n  line-height: 36px;\n  font-weight: 500;\n\n  &:focus {\n    outline: none;\n  }\n`;\n","import { isEmpty } from \"ramda\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { ConfirmButton } from \"../../components/Button\";\nimport { Place } from \"../../components/Place\";\n\nexport const Welcome = () => {\n  const [place, setPlace] = useState(\"\");\n\n  return (\n    <PageWrapper>\n      <ContentWrapper>\n        <Msg>我想去</Msg>\n        <Place value={place} onChange={setPlace} placeholder=\"輸入地址\" />\n      </ContentWrapper>\n      <ActionWrapper>\n        {isEmpty(place) ? (\n          <ConfirmButton disabled shadowed>\n            話去就去!\n          </ConfirmButton>\n        ) : (\n          <Link to={{ pathname: \"/confirm\", search: `?place=${place}` }}>\n            <ConfirmButton shadowed>話去就去!</ConfirmButton>\n          </Link>\n        )}\n        <StyledLink to=\"/qr\">掃瞄二維碼</StyledLink>\n      </ActionWrapper>\n    </PageWrapper>\n  );\n};\n\nconst PageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.8);\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ContentWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst Msg = styled.div`\n  color: #ffffff;\n  text-align: center;\n  font-size: 15px;\n`;\n\nconst ActionWrapper = styled.div`\n  width: 100%;\n  text-align: center;\n  color: #fff;\n  padding: 40px 0;\n  flex-shrink: 0;\n`;\n\nconst StyledLink = styled(Link)`\n  color: #ffffff;\n`;\n","export default __webpack_public_path__ + \"static/media/cross.d2bbc7f7.svg\";","export default __webpack_public_path__ + \"static/media/tick.6d45b966.svg\";","export default __webpack_public_path__ + \"static/media/crossBlack.aafc0aee.svg\";","export default __webpack_public_path__ + \"static/media/greenTick.5e528318.svg\";","import React, { useState, useEffect, useMemo } from \"react\";\nimport Modal from \"react-modal\";\nimport crossBlack from \"../../assets/crossBlack.svg\";\nimport greenTick from \"../../assets/greenTick.svg\";\n\nimport styled from \"styled-components\";\nimport { ModalConfirmButton } from \"../../components/Button\";\nimport { disableBodyScroll } from \"body-scroll-lock\";\nimport { Dayjs } from \"dayjs\";\n\ntype Props = {\n  isModalOpen: boolean;\n  onCancel: () => void;\n  onConfirm: (value: number) => void;\n  selectedAutoLeaveHour: number;\n  date: Dayjs;\n};\n\nexport const AutoLeaveModal = ({\n  isModalOpen,\n  onCancel,\n  onConfirm,\n  selectedAutoLeaveHour,\n  date,\n}: Props) => {\n  const [autoLeaveHourTmp, setAutoLeaveHourTmp] = useState(\n    selectedAutoLeaveHour\n  );\n\n  useEffect(() => {\n    setAutoLeaveHourTmp(selectedAutoLeaveHour);\n  }, [setAutoLeaveHourTmp, selectedAutoLeaveHour]);\n\n  const handleConfirm = () => {\n    onConfirm(autoLeaveHourTmp);\n  };\n\n  const toDate = useMemo(() => date.add(autoLeaveHourTmp, \"hour\"), [\n    date,\n    autoLeaveHourTmp,\n  ]);\n\n  const disableScroll = () => {\n    const root = document.querySelector(\"#scroll\");\n    if (!root) return;\n    disableBodyScroll(root);\n  };\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      onRequestClose={onCancel}\n      style={{\n        overlay: {\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        },\n        content: {\n          outline: \"none\",\n          border: \"0\",\n          padding: \"16px\",\n          borderRadius: \"8px\",\n          width: \"240px\",\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          height: \"370px\",\n          overflow: \"hidden\",\n        },\n      }}\n      ariaHideApp={false}\n      onAfterOpen={disableScroll}\n    >\n      <CrossWrapper>\n        <Cross src={crossBlack} onClick={onCancel} />\n      </CrossWrapper>\n      <Title>設罝自動離開時間</Title>\n      <HourListWrapper id=\"scroll\">\n        <HourList>\n          {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((hour) => (\n            <HourListItem\n              onClick={() => {\n                setAutoLeaveHourTmp(hour);\n              }}\n              key={hour}\n            >\n              + {hour}小時\n              {autoLeaveHourTmp === hour && <SelectedTick src={greenTick} />}\n            </HourListItem>\n          ))}\n        </HourList>\n      </HourListWrapper>\n      <TimeWrapper>\n        <div>於{date.format(\"MM-DD HH:mm\")} 進入場所</div>\n        <div>於{toDate.format(\"MM-DD HH:mm\")} 自動離開</div>\n      </TimeWrapper>\n      <ModalConfirmButton onClick={handleConfirm}>確認</ModalConfirmButton>\n    </Modal>\n  );\n};\n\nconst Cross = styled.img`\n  height: 20px;\n`;\n\nconst CrossWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n`;\n\nconst Title = styled.h1`\n  font-size: 20px;\n  text-align: center;\n  margin-top: 20px;\n  margin-bottom: 0;\n`;\n\nconst HourListWrapper = styled.div`\n  overflow: auto;\n  height: 180px;\n  padding: 0 8px;\n`;\n\nconst HourList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst HourListItem = styled.li`\n  line-height: 40px;\n  border-bottom: 1px #eeeeee solid;\n  padding: 0 8px;\n`;\n\nconst TimeWrapper = styled.div`\n  font-size: 12px;\n  text-align: center;\n  padding: 16px 0;\n`;\n\nconst SelectedTick = styled.img`\n  height: 32px;\n  position: relative;\n  float: right;\n  top: 4px;\n`;\n","import React, { useMemo } from \"react\";\nimport Modal from \"react-modal\";\nimport crossBlack from \"../../assets/crossBlack.svg\";\n\nimport styled from \"styled-components\";\nimport { ModalConfirmButton } from \"../../components/Button\";\nimport { Dayjs } from \"dayjs\";\n\ntype Props = {\n  isModalOpen: boolean;\n  onCancel: () => void;\n  onLeaveNow: () => void;\n  onLeaved: () => void;\n  place: string;\n  date: Dayjs;\n  autoLeaveHour: number;\n};\n\nexport const LeaveModal = ({\n  isModalOpen,\n  onCancel,\n  onLeaveNow,\n  onLeaved,\n  place,\n  date,\n  autoLeaveHour,\n}: Props) => {\n  const shouldDisplayAutoLeave = autoLeaveHour !== 0;\n\n  const toDate = useMemo(() => date.add(autoLeaveHour, \"hour\"), [\n    date,\n    autoLeaveHour,\n  ]);\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      onRequestClose={onCancel}\n      style={{\n        overlay: {\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        },\n        content: {\n          outline: \"none\",\n          border: \"0\",\n          padding: \"16px\",\n          borderRadius: \"8px\",\n          width: \"240px\",\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          height: shouldDisplayAutoLeave ? \"430px\" : \"390px\",\n          overflow: \"hidden\",\n        },\n      }}\n      ariaHideApp={false}\n    >\n      <CrossWrapper>\n        <Cross src={crossBlack} onClick={onCancel} />\n      </CrossWrapper>\n      <Msg>你已進入場所</Msg>\n      <Place>{place}</Place>\n      <Time>{date.format(\"YYYY-MM-DD HH:mm\")}</Time>\n      <Title>你現在要離開嗎？</Title>\n      {shouldDisplayAutoLeave && (\n        <AutoLeave>於{toDate.format(\"MM-DD HH:mm\")} 自動離開</AutoLeave>\n      )}\n      <ModalConfirmButton onClick={onLeaveNow}>\n        是的，我現在要離開\n      </ModalConfirmButton>\n      <GreenButton onClick={onLeaved}>我現已經離開了</GreenButton>\n    </Modal>\n  );\n};\n\nconst Cross = styled.img`\n  height: 20px;\n`;\n\nconst CrossWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  margin-bottom: 8px;\n`;\n\nconst Title = styled.div`\n  font-size: 20px;\n  text-align: center;\n  margin: 64px 0;\n  font-weight: 500;\n`;\n\nconst GreenButton = styled(ModalConfirmButton)`\n  background-color: #12b188;\n  color: #fff;\n  text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst Msg = styled.div`\n  text-align: center;\n  font-size: 16px;\n`;\n\nconst Time = styled.div`\n  text-align: center;\n  font-size: 14px;\n`;\n\nconst Place = styled.div`\n  color: unset;\n  text-shadow: none;\n  text-align: center;\n  font-size: 28px;\n  font-weight: 500;\n  line-height: 48px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nconst AutoLeave = styled.div`\n  font-size: 12px;\n  text-align: center;\n  padding: 12px 0;\n`;\n","import React, { forwardRef, useImperativeHandle } from \"react\";\n\nimport styled from \"styled-components\";\nimport Picker from \"pickerjs\";\nimport \"pickerjs/dist/picker.min.css\";\n\nexport type DatePickerHandler = {\n  init: () => void;\n};\n\nexport const DatePicker = forwardRef((props: any, ref: any) => {\n  // mount effect wont work on model, need to call this after onAfterOpen event\n  useImperativeHandle(ref, () => ({\n    init: () => {\n      const ele = document.querySelector(\n        \".js-inline-picker\"\n      ) as HTMLElement | null;\n      if (!ele) return;\n      new Picker(ele, {\n        inline: true,\n        rows: 2,\n      });\n    },\n  }));\n\n  return (\n    <Wrapper>\n      <div className=\"js-inline-picker\" />\n    </Wrapper>\n  );\n});\n\nconst Wrapper = styled.div`\n  & .picker {\n    font-size: 12px;\n  }\n\n  & .picker-dialog {\n    border: 0;\n  }\n\n  & .picker-cell:before {\n    background-image: unset;\n  }\n\n  & .picker-cell:after {\n    background-image: unset;\n  }\n\n  & .picker-picked {\n    color: unset;\n    border-top: #12b188 1px solid;\n    border-bottom: #12b188 1px solid;\n  }\n\n  & .picker-cell {\n    padding: 0 4px;\n  }\n\n  & .picker-item {\n    padding: 3px 0px;\n  }\n\n  & .picker-cell + .picker-cell {\n    border: 0;\n  }\n`;\n","import React, { useRef } from \"react\";\nimport Modal from \"react-modal\";\nimport crossBlack from \"../../assets/crossBlack.svg\";\n\nimport styled from \"styled-components\";\nimport { ModalConfirmButton } from \"../../components/Button\";\nimport { DatePicker, DatePickerHandler } from \"../../components/DatePicker\";\n\ntype Props = {\n  isModalOpen: boolean;\n  onCancel: () => void;\n  onConfirm: () => void;\n};\n\nexport const TimePickModal = ({ isModalOpen, onCancel, onConfirm }: Props) => {\n  const datePickerRef = useRef<DatePickerHandler>(null);\n\n  const initPicker = () => {\n    datePickerRef.current && datePickerRef.current.init();\n  };\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      onRequestClose={onCancel}\n      style={{\n        overlay: {\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        },\n        content: {\n          outline: \"none\",\n          border: \"0\",\n          padding: \"16px\",\n          borderRadius: \"8px\",\n          width: \"240px\",\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          height: \"280px\",\n          overflow: \"hidden\",\n        },\n      }}\n      ariaHideApp={false}\n      onAfterOpen={initPicker}\n    >\n      <CrossWrapper>\n        <Cross src={crossBlack} onClick={onCancel} />\n      </CrossWrapper>\n      <Title>你是什麼時候離開？</Title>\n      <TimePickerWrapper>\n        <DatePicker ref={datePickerRef} />\n      </TimePickerWrapper>\n      <ModalConfirmButton onClick={onConfirm}>確認</ModalConfirmButton>\n    </Modal>\n  );\n};\n\nconst Cross = styled.img`\n  height: 20px;\n`;\n\nconst CrossWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n`;\n\nconst Title = styled.div`\n  font-size: 20px;\n  text-align: center;\n  margin-top: 24px;\n`;\n\nconst TimePickerWrapper = styled.div`\n  border-bottom: 1px #eeeeee solid;\n  border-top: 1px #eeeeee solid;\n  padding: 32px 0;\n  margin: 16px 0;\n`;\n","export default __webpack_public_path__ + \"static/media/checkbox.4e2450ab.svg\";","export default __webpack_public_path__ + \"static/media/checkboxChecked.7f6c2da0.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport checkbox from \"../assets/checkbox.svg\";\nimport checkboxChecked from \"../assets/checkboxChecked.svg\";\nimport { isAndroid } from \"react-device-detect\";\nimport { Checkbox } from \"@material-ui/core\";\n\ntype Props = {\n  checked: boolean;\n  onChange: (value: boolean) => void;\n};\n\nexport const CheckBox = ({ onChange, checked }: Props) => {\n  const handleClick = () => {\n    onChange(!checked);\n  };\n\n  return isAndroid ? (\n    <StyledCheckbox checked={checked} onClick={handleClick} color=\"primary\" />\n  ) : (\n    <IOSCheckBox\n      src={checked ? checkboxChecked : checkbox}\n      onClick={handleClick}\n    />\n  );\n};\n\nconst IOSCheckBox = styled.img`\n  height: 32px;\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 8px;\n`;\n\nconst StyledCheckbox = styled(Checkbox)`\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 8px !important;\n  padding: 0 !important;\n\n  &.MuiCheckbox-colorPrimary {\n    color: #fff !important;\n  }\n`;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport styled from \"styled-components\";\nimport cross from \"../../assets/cross.svg\";\n\nimport tick from \"../../assets/tick.svg\";\n\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { ConfirmButton } from \"../../components/Button\";\nimport { Place } from \"../../components/Place\";\nimport { AutoLeaveModal } from \"./AutoLeaveModal\";\nimport { LeaveModal } from \"./LeaveModal\";\nimport { TimePickModal } from \"./TimePickModal\";\nimport { isEmpty } from \"ramda\";\nimport { CheckBox } from \"../../components/CheckBox\";\nimport dayjs from \"dayjs\";\n\nexport const Confirm = () => {\n  const browserHistory = useHistory();\n  const browserLocation = useLocation();\n  const [autoLeave, setAutoLeave] = useState(true);\n  const [autoLeaveHour, setAutoLeaveHour] = useState(4);\n  const [isAutoLeaveModalOpen, setIsAutoLeaveModalOpen] = useState(false);\n  const [isLeaveModalOpen, setIsLeaveModalOpen] = useState(false);\n  const [isTimePickModalOpen, setIsTimePickModalOpen] = useState(false);\n\n  const place = useMemo(\n    () => new URLSearchParams(browserLocation.search).get(\"place\"),\n    [browserLocation.search]\n  );\n\n  useEffect(() => {\n    if (!place || isEmpty(place)) browserHistory.push(\"/\");\n  }, [browserHistory, place]);\n\n  const date = useMemo(() => dayjs(), []);\n\n  const handleSetAutoLeaveHour = (value: number) => {\n    setAutoLeaveHour(value);\n    setIsAutoLeaveModalOpen(false);\n  };\n\n  const handleLeavePage = () => {\n    browserHistory.push(\"/\");\n  };\n\n  const handleLeaved = () => {\n    setIsLeaveModalOpen(false);\n    setIsTimePickModalOpen(true);\n  };\n\n  return (\n    <>\n      <PageWrapper>\n        <Header>\n          <Link to=\"/\">\n            <Cross src={cross} />\n          </Link>\n        </Header>\n        <MessageWrapper>\n          <Msg>你已進入場所</Msg>\n          <PlaceWrapper>\n            <Place value={place || \"\"} readOnly />\n          </PlaceWrapper>\n          <Time>{date.format(\"YYYY-MM-DD HH:mm\")}</Time>\n        </MessageWrapper>\n        <TickWrapper>\n          <TickWrapperInner>\n            <Tick src={tick} />\n          </TickWrapperInner>\n        </TickWrapper>\n        <ActionGroup>\n          <AutoLeave>\n            <CheckBoxWrapper>\n              <CheckBox checked={autoLeave} onChange={setAutoLeave} />\n              {autoLeaveHour}小時後自動離開\n            </CheckBoxWrapper>\n            <Change\n              onClick={() => {\n                setIsAutoLeaveModalOpen(true);\n              }}\n            >\n              變更\n            </Change>\n          </AutoLeave>\n          <ConfirmButton\n            shadowed\n            onClick={() => {\n              setIsLeaveModalOpen(true);\n            }}\n          >\n            離開\n          </ConfirmButton>\n          <LeaveMessage>當你離開時請緊記按\"離開\"</LeaveMessage>\n        </ActionGroup>\n      </PageWrapper>\n      <AutoLeaveModal\n        isModalOpen={isAutoLeaveModalOpen}\n        onCancel={() => {\n          setIsAutoLeaveModalOpen(false);\n        }}\n        onConfirm={handleSetAutoLeaveHour}\n        selectedAutoLeaveHour={autoLeaveHour}\n        date={date}\n      />\n      <LeaveModal\n        isModalOpen={isLeaveModalOpen}\n        onCancel={() => {\n          setIsLeaveModalOpen(false);\n        }}\n        onLeaveNow={handleLeavePage}\n        onLeaved={handleLeaved}\n        place={place || \"\"}\n        date={date}\n        autoLeaveHour={autoLeave ? autoLeaveHour : 0}\n      />\n      <TimePickModal\n        isModalOpen={isTimePickModalOpen}\n        onCancel={() => {\n          setIsTimePickModalOpen(false);\n        }}\n        onConfirm={handleLeavePage}\n      />\n    </>\n  );\n};\n\nconst PageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.8);\n  display: flex;\n  flex-direction: column;\n  color: #fff;\n`;\n\nconst Header = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  flex-shrink: 0;\n`;\n\nconst Cross = styled.img`\n  height: 20px;\n  margin: 24px;\n`;\n\nconst PlaceWrapper = styled.div`\n  padding: 0 32px;\n`;\n\nconst MessageWrapper = styled.div`\n  width: 100%;\n  height: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst TickWrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  text-align: center;\n`;\n\nconst TickWrapperInner = styled.div`\n  height: 100%;\n  max-height: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst Tick = styled.img`\n  display: inline-block;\n  height: 100%;\n  max-height: 110px;\n`;\n\nconst Msg = styled.div`\n  color: #ffffff;\n  text-align: center;\n  font-size: 15px;\n`;\n\nconst Time = styled.div`\n  color: #ffffff;\n  text-align: center;\n`;\n\nconst AutoLeave = styled.div`\n  margin-bottom: 16px;\n  width: 100%;\n  max-width: 380px;\n  margin: 16px auto;\n  display: flex;\n  flex-shrink: 0;\n  font-size: 14px;\n`;\n\nconst CheckBoxWrapper = styled.div`\n  width: 100%;\n  text-align: left;\n  padding-left: 24px;\n  line-height: 32px;\n`;\n\nconst Change = styled.div`\n  flex-shrink: 0;\n  padding-right: 24px;\n  line-height: 32px;\n`;\n\nconst LeaveMessage = styled.div`\n  text-align: center;\n  padding-bottom: 40px;\n  flex-shrink: 0;\n`;\n\nconst ActionGroup = styled.div`\n  width: 100%;\n  flex-shrink: 0;\n`;\n","export default __webpack_public_path__ + \"static/media/back.7bf7a56f.svg\";","import { isEmpty, trim } from \"ramda\";\nimport { sha256 } from \"js-sha256\";\n\ntype DecodedJSON = {\n  hash: string;\n  metadata: { typeEn: string; typeZh: string };\n  nameEn: string;\n  nameZh: string;\n  type: string;\n};\n\n// https://github.com/aaasssdddwww/back-home-safe/pull/7\nexport const qrDecode = (input: string): string => {\n  if (!input.startsWith(\"HKEN:\")) return \"\";\n  const placeId = input.substring(6, 14);\n  const computedHash = getHash(placeId);\n\n  const base64Data = input.substring(14);\n  const json: DecodedJSON = JSON.parse(window.atob(base64Data));\n\n  console.log({\n    input,\n    placeId,\n    decodedData: json,\n    computedHash,\n    hashMatch: computedHash === json.hash,\n  });\n\n  const trimmedZhName = json.nameZh ? trim(json.nameZh) : \"\";\n  const name = !isEmpty(trimmedZhName) ? trimmedZhName : json.nameEn;\n\n  return decodeURIComponent(escape(name));\n};\n\n// http://blog.headuck.com/2020/11/19/%e3%80%8c%e5%ae%89%e5%bf%83%e5%87%ba%e8%a1%8c%e3%80%8d%e8%83%bd%e5%90%a6%e5%ae%89%e5%bf%83%e4%bd%bf%e7%94%a8%ef%bc%9f%ef%bc%88%e4%ba%8c%ef%bc%89/?__cf_chl_captcha_tk__=872d5919c48d1b25116c910c9de6c92e2b27facf-1613591353-0-AcPHoKV7LGMua5u8nTgTCYJXS9ZaCBaNSavb3A1E6F6HLsITHuJ9oA-SH4uu4UqnYiphktotJfPYaSUxQSmcfTk6y8iVJb873VgLU0qrdjxU6pZjBx5UxwqLDXom03026Z7EFmoHq70-CVMFVFPdTLHLXkIEYDFHZeqU0RE5KUjOwoJpOIFRLfsXwtRYGefQtspNIySZCg6u5sSDpxdRNc5dpOfdN2dybpb0G5T7j2URLhglnm7gH_chBuLNtSg-awOlrCk7Ljktwxte6lQj6AoNG2Cbqry8_-VvWdPX_1BdDfQ3apJvfUewJ6AIqHfDclXLrRril2vcMckHgrgvATQa4rcOr6AwzaZBcf90sfp3bnNQw59oszIkaV3Dzb8TrJlm4jWq42q3ijXTUua1WKWPDBzDBNl1SjLtar-AI3kzrgwFgaXkWkAxakLyTBJ7wszVHo0DHdCtE_Ozma4VkIZWZSF_gZ3dgBeAbBdwW8XTPsliqfplIeHsML8uJ2dAlxxPIcDDJ7a0gYr2YK4Jdl1ot568DfdMOuzhoMzy2OJKT9YFITl4k0Zger3M5kjSUPjgAOjB4j4p2M6kla2DERXhQj0IRi-sXG92OWEX5-Joa4x41eMqH6X6La4CaSfamwyN3gSwFtBfxvPA2V-Hss3Vj4zEgGs75oxSS7ZrUwbwOORal3VPYiWHzaif0qbWw93UBfuMgfsAyJnvAa5TntFPz3PZqpY9rg6gExJSaKFGBKAnOxyitUe1BDt0rW76u_qay7xF1WlCGCtIasM82E5nF1X51J_sXcAMwmZyG29b\nexport const getHash = (placeId: string) => {\n  const string = `HKEN${placeId}2020`;\n  return sha256(string);\n};\n","export default __webpack_public_path__ + \"static/media/qrOverlay.185cc3ea.svg\";","import React, { useCallback, useEffect, useRef } from \"react\";\nimport jsQR, { QRCode } from \"jsqr\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  onDecode: (code: QRCode) => void;\n};\n\n// ref: https://ithelp.ithome.com.tw/articles/10239258\nconst OldGetUserMedia = () =>\n  navigator.getUserMedia ||\n  (navigator as any).webkitGetUserMedia ||\n  (navigator as any).mozGetUserMedia ||\n  (navigator as any).msGetUserMedia;\n\n// Initializes media stream.\nconst getUserMedia = (constraints: MediaStreamConstraints) => {\n  if (\"mediaDevices\" in navigator) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n  // 相容處理，依照新接口\n  (navigator as any).mediaDevices = {};\n\n  (navigator as any).mediaDevices.getUserMedia = (\n    constraints: MediaStreamConstraints\n  ) => {\n    const getUserMedia = OldGetUserMedia();\n\n    // 不支援的情況下\n    if (!getUserMedia) {\n      return Promise.reject(\n        new Error(\"getUserMedia is not implemented in this browser\")\n      );\n    }\n\n    // 保持跟原先api一樣故將其封裝成promise\n    return new Promise(function (resolve, reject) {\n      getUserMedia.call(navigator, constraints, resolve, reject);\n    });\n  };\n\n  return (navigator as any).mediaDevices.getUserMedia(constraints);\n};\n\nexport const QRCodeReader = ({ onDecode }: Props) => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const tick = useCallback(() => {\n    const canvasElement = canvasRef.current;\n    const videoElement = videoRef.current;\n\n    if (\n      canvasElement &&\n      videoElement &&\n      videoElement.readyState === videoElement.HAVE_ENOUGH_DATA\n    ) {\n      const canvas = canvasElement.getContext(\"2d\");\n      if (!canvas) return;\n\n      canvasElement.height = videoElement.videoHeight;\n      canvasElement.width = videoElement.videoWidth;\n      canvas.drawImage(\n        videoElement,\n        0,\n        0,\n        canvasElement.width,\n        canvasElement.height\n      );\n\n      const imageData = canvas.getImageData(\n        0,\n        0,\n        canvasElement.width,\n        canvasElement.height\n      );\n      const code = jsQR(imageData.data, imageData.width, imageData.height, {\n        inversionAttempts: \"dontInvert\",\n      });\n\n      if (code) {\n        onDecode(code);\n      }\n    }\n    requestAnimationFrame(tick);\n  }, [videoRef, canvasRef, onDecode]);\n\n  useEffect(() => {\n    const videoElement = videoRef.current;\n    if (!videoElement) return;\n\n    getUserMedia({ video: { facingMode: \"environment\" } }).then(\n      (stream: MediaStream) => {\n        if (!videoElement) return;\n        videoElement.srcObject = stream;\n        videoElement.play();\n        requestAnimationFrame(tick);\n      }\n    );\n  }, [tick, videoRef]);\n\n  return (\n    <>\n      <Video ref={videoRef} playsInline />\n      <Canvas ref={canvasRef} />\n    </>\n  );\n};\n\nconst Video = styled.video`\n  /* Make video to at least 100% wide and tall */\n  min-width: 100%;\n  min-height: 100%;\n\n  /* Setting width & height to auto prevents the browser from stretching or squishing the video */\n  width: auto;\n  height: auto;\n\n  /* Center the video */\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst Canvas = styled.canvas`\n  display: none;\n`;\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport back from \"../../assets/back.svg\";\nimport { qrDecode } from \"../../utils/qrDecode\";\nimport qrOverlay from \"../../assets/qrOverlay.svg\";\nimport { QRCodeReader } from \"../../components/QRCodeReader\";\nimport { QRCode } from \"jsqr\";\nimport { isEmpty } from \"ramda\";\n\nexport const QR = () => {\n  const browserHistory = useHistory();\n\n  const handleScan = ({ data }: QRCode) => {\n    if (!data || isEmpty(data)) return;\n    const place = qrDecode(data);\n    if (isEmpty(place)) return;\n    browserHistory.push({ pathname: \"/confirm\", search: `?place=${place}` });\n  };\n\n  return (\n    <PageWrapper>\n      <Header>\n        <Link to=\"/\">\n          <BackButton src={back} />\n        </Link>\n        掃瞄二維碼\n      </Header>\n      <Message>掃瞄二維碼</Message>\n      <VideoContainer>\n        <Overlay />\n        <QRCodeReader onDecode={handleScan} />\n      </VideoContainer>\n    </PageWrapper>\n  );\n};\n\nconst PageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.8);\n  display: flex;\n  flex-direction: column;\n`;\n\nconst BackButton = styled.img`\n  height: 20px;\n  top: 14px;\n  left: 16px;\n  position: absolute;\n`;\n\nconst Header = styled.div`\n  color: #ffffff;\n  background-color: #12b188;\n  text-align: center;\n  line-height: 48px;\n  text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.8);\n  flex-shrink: 0;\n`;\n\nconst VideoContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  position: relative;\n`;\n\nconst Overlay = styled.div`\n  /* The image used */\n  background-image: url(\"${qrOverlay}\");\n\n  /* Full height */\n  height: 100%;\n\n  /* Center and scale the image nicely */\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n  z-index: 50;\n  position: relative;\n`;\n\nconst Message = styled.div`\n  position: absolute;\n  z-index: 51;\n  bottom: 20%;\n  width: 100%;\n  text-align: center;\n  color: #ffffff;\n  font-size: 16px;\n`;\n","export default __webpack_public_path__ + \"static/media/plus.abd4712a.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport plus from \"../../src/assets/plus.svg\";\n\nexport const PWAPrompt = () => {\n  return (\n    <Wrapper>\n      <AddIcon src={plus} />\n      <div>新增至主畫面先啦</div>\n      <div>唔係點似個App</div>\n      <InstructionWrapper>\n        <div>IOS</div>\n        <div>{\"用Safari開=>分享=>新增至主畫面\"}</div>\n        <div>Android</div>\n        <div>{\"用Chrome開=>右上選項=>新增至主畫面/安裝應用程式\"}</div>\n      </InstructionWrapper>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  justify-content: center;\n  vertical-align: middle;\n  flex-direction: column;\n  text-align: center;\n  color: #fff;\n`;\n\nconst AddIcon = styled.img`\n  width: 100px;\n  margin: 0 auto 32px auto;\n`;\n\nconst InstructionWrapper = styled.div`\n  font-size: 12px;\n  margin-top: 24px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\n\nimport { Route, HashRouter, Switch, Redirect } from \"react-router-dom\";\nimport { Welcome } from \"./containers/Welcome\";\nimport { Confirm } from \"./containers/Confirm\";\nimport { QR } from \"./containers/QR\";\nimport { PWAPrompt } from \"./components/PWAPrompt\";\nimport { disableBodyScroll } from \"body-scroll-lock\";\nimport adapter from \"webrtc-adapter\";\n\nfunction App() {\n  const [isPWA, setPWA] = useState(false);\n\n  useEffect(() => {\n    setPWA(\n      window.matchMedia(\"(display-mode: standalone)\").matches ||\n        /\\bmode=standalone\\b/.test(window.location.hash) ||\n        window.location.hostname === \"localhost\"\n    );\n    console.log(adapter.browserDetails.browser, adapter.browserDetails.version);\n\n   \n  }, []);\n\n  useEffect(() => {\n    const root = document.querySelector(\"#root\");\n    if (!root) return;\n    disableBodyScroll(root);\n  }, []);\n\n  return (\n    <>\n      <GlobalStyle />\n      {isPWA ? (\n        <HashRouter basename=\"/\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Welcome />\n            </Route>\n            <Route exact path=\"/qr\">\n              <QR />\n            </Route>\n            <Route exact path=\"/confirm\">\n              <Confirm />\n            </Route>\n            <Redirect to=\"/\" />\n          </Switch>\n        </HashRouter>\n      ) : (\n        <PWAPrompt />\n      )}\n    </>\n  );\n}\n\nexport default App;\n\nconst GlobalStyle = createGlobalStyle`\nhtml {\n  width: 100%;\n  height: 100%;\n}\n\nbody {\n  margin: 0;\n  font-family: Noto Sans, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background-color:#12b188;\n  width: 100%;\n  height: 100%;\n}\n\ntextarea{\n  font-family: Noto Sans, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n}\n\n\n#root {\n  width: 100%;\n  height: 100%;\n}\n\na {\n  text-decoration: none;\n}\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n"],"sourceRoot":""}